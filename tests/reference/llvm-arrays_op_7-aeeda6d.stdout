; ModuleID = 'LFortran'
source_filename = "LFortran"

%array = type { i32*, i32, %dimension_descriptor*, i1, i32 }
%dimension_descriptor = type { i32, i32, i32 }

@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [5 x i8] c"%d%s\00", align 1
@3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

define void @f(%array* %x, %array* %y) {
.entry:
  %"1_k" = alloca i32, align 4
  %0 = getelementptr %array, %array* %y, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %6 = load i32, i32* %"1_k", align 4
  %7 = add i32 %6, 1
  %8 = getelementptr %array, %array* %y, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, %12
  %16 = sub i32 %15, 1
  %17 = icmp sle i32 %7, %16
  br i1 %17, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %"1_k", align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %"1_k", align 4
  %20 = load i32, i32* %"1_k", align 4
  %21 = getelementptr %array, %array* %y, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %22, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %20, %25
  %27 = mul i32 1, %26
  %28 = add i32 0, %27
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = mul i32 1, %30
  %32 = getelementptr %array, %array* %y, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i32 %28
  %35 = load i32, i32* %"1_k", align 4
  %36 = getelementptr %array, %array* %x, i32 0, i32 2
  %37 = load %dimension_descriptor*, %dimension_descriptor** %36, align 8
  %38 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %37, i32 0
  %39 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sub i32 %35, %40
  %42 = mul i32 1, %41
  %43 = add i32 0, %42
  %44 = getelementptr %dimension_descriptor, %dimension_descriptor* %38, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = mul i32 1, %45
  %47 = getelementptr %array, %array* %x, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 %43
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %34, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  ret void
}

define void @f_x(i32* %x, i32* %"1x", i32* %"2x", %array* %y) {
.entry:
  %"1_k" = alloca i32, align 4
  %0 = getelementptr %array, %array* %y, i32 0, i32 2
  %1 = load %dimension_descriptor*, %dimension_descriptor** %0, align 8
  %2 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %1, i32 0
  %3 = getelementptr %dimension_descriptor, %dimension_descriptor* %2, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = sub i32 %4, 1
  store i32 %5, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %6 = load i32, i32* %"1_k", align 4
  %7 = add i32 %6, 1
  %8 = getelementptr %array, %array* %y, i32 0, i32 2
  %9 = load %dimension_descriptor*, %dimension_descriptor** %8, align 8
  %10 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %9, i32 0
  %11 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr %dimension_descriptor, %dimension_descriptor* %10, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, %12
  %16 = sub i32 %15, 1
  %17 = icmp sle i32 %7, %16
  br i1 %17, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %18 = load i32, i32* %"1_k", align 4
  %19 = add i32 %18, 1
  store i32 %19, i32* %"1_k", align 4
  %20 = load i32, i32* %"1_k", align 4
  %21 = getelementptr %array, %array* %y, i32 0, i32 2
  %22 = load %dimension_descriptor*, %dimension_descriptor** %21, align 8
  %23 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %22, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %20, %25
  %27 = mul i32 1, %26
  %28 = add i32 0, %27
  %29 = getelementptr %dimension_descriptor, %dimension_descriptor* %23, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = mul i32 1, %30
  %32 = getelementptr %array, %array* %y, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i32 %28
  %35 = load i32, i32* %"1_k", align 4
  %36 = load i32, i32* %"1x", align 4
  %37 = load i32, i32* %"2x", align 4
  %38 = sub i32 %35, %36
  %39 = mul i32 1, %38
  %40 = add i32 0, %39
  %41 = mul i32 1, %37
  %42 = getelementptr inbounds i32, i32* %x, i32 %40
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %34, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  br label %return

return:                                           ; preds = %loop.end
  ret void
}

define i32 @main() {
.entry:
  %call_arg_value1 = alloca i32, align 4
  %call_arg_value = alloca i32, align 4
  %"1_k" = alloca i32, align 4
  %x = alloca %array, align 8
  %0 = getelementptr %array, %array* %x, i32 0, i32 1
  store i32 0, i32* %0, align 4
  %1 = getelementptr %array, %array* %x, i32 0, i32 2
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = alloca %dimension_descriptor, i32 %3, align 8
  %5 = getelementptr %array, %array* %x, i32 0, i32 4
  store i32 1, i32* %5, align 4
  store %dimension_descriptor* %4, %dimension_descriptor** %1, align 8
  %6 = load %dimension_descriptor*, %dimension_descriptor** %1, align 8
  %7 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %6, i32 0
  %8 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 0
  %9 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 1
  %10 = getelementptr %dimension_descriptor, %dimension_descriptor* %7, i32 0, i32 2
  store i32 1, i32* %8, align 4
  store i32 1, i32* %9, align 4
  store i32 3, i32* %10, align 4
  %11 = alloca i32, align 4
  store i32 3, i32* %11, align 4
  %12 = getelementptr %array, %array* %x, i32 0, i32 0
  %13 = load i32, i32* %11, align 4
  %14 = alloca i32, i32 %13, align 4
  store i32* %14, i32** %12, align 8
  %y = alloca %array, align 8
  %15 = getelementptr %array, %array* %y, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr %array, %array* %y, i32 0, i32 2
  %17 = alloca i32, align 4
  store i32 1, i32* %17, align 4
  %18 = load i32, i32* %17, align 4
  %19 = alloca %dimension_descriptor, i32 %18, align 8
  %20 = getelementptr %array, %array* %y, i32 0, i32 4
  store i32 1, i32* %20, align 4
  store %dimension_descriptor* %19, %dimension_descriptor** %16, align 8
  %21 = load %dimension_descriptor*, %dimension_descriptor** %16, align 8
  %22 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %21, i32 0
  %23 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 0
  %24 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 1
  %25 = getelementptr %dimension_descriptor, %dimension_descriptor* %22, i32 0, i32 2
  store i32 1, i32* %23, align 4
  store i32 1, i32* %24, align 4
  store i32 3, i32* %25, align 4
  %26 = alloca i32, align 4
  store i32 3, i32* %26, align 4
  %27 = getelementptr %array, %array* %y, i32 0, i32 0
  %28 = load i32, i32* %26, align 4
  %29 = alloca i32, i32 %28, align 4
  store i32* %29, i32** %27, align 8
  %30 = getelementptr %array, %array* %x, i32 0, i32 2
  %31 = load %dimension_descriptor*, %dimension_descriptor** %30, align 8
  %32 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %31, i32 0
  %33 = getelementptr %dimension_descriptor, %dimension_descriptor* %32, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sub i32 %34, 1
  store i32 %35, i32* %"1_k", align 4
  br label %loop.head

loop.head:                                        ; preds = %loop.body, %.entry
  %36 = load i32, i32* %"1_k", align 4
  %37 = add i32 %36, 1
  %38 = getelementptr %array, %array* %x, i32 0, i32 2
  %39 = load %dimension_descriptor*, %dimension_descriptor** %38, align 8
  %40 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %39, i32 0
  %41 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr %dimension_descriptor, %dimension_descriptor* %40, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, %42
  %46 = sub i32 %45, 1
  %47 = icmp sle i32 %37, %46
  br i1 %47, label %loop.body, label %loop.end

loop.body:                                        ; preds = %loop.head
  %48 = load i32, i32* %"1_k", align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %"1_k", align 4
  %50 = load i32, i32* %"1_k", align 4
  %51 = getelementptr %array, %array* %x, i32 0, i32 2
  %52 = load %dimension_descriptor*, %dimension_descriptor** %51, align 8
  %53 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %52, i32 0
  %54 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = sub i32 %50, %55
  %57 = mul i32 1, %56
  %58 = add i32 0, %57
  %59 = getelementptr %dimension_descriptor, %dimension_descriptor* %53, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = mul i32 1, %60
  %62 = getelementptr %array, %array* %x, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds i32, i32* %63, i32 %58
  store i32 3, i32* %64, align 4
  br label %loop.head

loop.end:                                         ; preds = %loop.head
  %65 = getelementptr %array, %array* %x, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  store i32 1, i32* %call_arg_value, align 4
  store i32 3, i32* %call_arg_value1, align 4
  %67 = alloca %array, align 8
  call void @f_x(i32* %66, i32* %call_arg_value, i32* %call_arg_value1, %array* %y)
  %68 = getelementptr %array, %array* %y, i32 0, i32 2
  %69 = load %dimension_descriptor*, %dimension_descriptor** %68, align 8
  %70 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %69, i32 0
  %71 = getelementptr %dimension_descriptor, %dimension_descriptor* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = sub i32 %72, 1
  store i32 %73, i32* %"1_k", align 4
  br label %loop.head2

loop.head2:                                       ; preds = %loop.body3, %loop.end
  %74 = load i32, i32* %"1_k", align 4
  %75 = add i32 %74, 1
  %76 = getelementptr %array, %array* %y, i32 0, i32 2
  %77 = load %dimension_descriptor*, %dimension_descriptor** %76, align 8
  %78 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %77, i32 0
  %79 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr %dimension_descriptor, %dimension_descriptor* %78, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, %80
  %84 = sub i32 %83, 1
  %85 = icmp sle i32 %75, %84
  br i1 %85, label %loop.body3, label %loop.end4

loop.body3:                                       ; preds = %loop.head2
  %86 = load i32, i32* %"1_k", align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %"1_k", align 4
  %88 = load i32, i32* %"1_k", align 4
  %89 = getelementptr %array, %array* %y, i32 0, i32 2
  %90 = load %dimension_descriptor*, %dimension_descriptor** %89, align 8
  %91 = getelementptr inbounds %dimension_descriptor, %dimension_descriptor* %90, i32 0
  %92 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = sub i32 %88, %93
  %95 = mul i32 1, %94
  %96 = add i32 0, %95
  %97 = getelementptr %dimension_descriptor, %dimension_descriptor* %91, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = mul i32 1, %98
  %100 = getelementptr %array, %array* %y, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds i32, i32* %101, i32 %96
  %103 = load i32, i32* %102, align 4
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i32 0, i32 0), i32 %103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %loop.head2

loop.end4:                                        ; preds = %loop.head2
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @4, i32 0, i32 0))
  ret i32 0
}

declare void @_lfortran_printf(i8*, ...)
