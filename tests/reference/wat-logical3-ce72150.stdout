(module
    (type (;0;) (func (param i32) (result)))
    (type (;1;) (func (param i32 i32 i32 i32) (result i32)))
    (type (;2;) (func (param i64) (result)))
    (type (;3;) (func (param f64) (result)))
    (type (;4;) (func (param) (result)))
    (import "wasi_snapshot_preview1" "proc_exit" (func (;0;) (type 0)))
    (import "wasi_snapshot_preview1" "fd_write" (func (;1;) (type 1)))
    (global $0 i32 (i32.const 0))
    (func $2 (type 2) (param i64) (result)
        (local i64 i64 i64 i64)
        local.get 0
        i64.const 0
        i64.eq
        if
            i32.const 1
            i32.const 52
            i32.const 1
            i32.const 0
            call 1
            drop
            return
        else
        end
        local.get 0
        i64.const 0
        i64.lt_s
        if
            i32.const 1
            i32.const 28
            i32.const 1
            i32.const 0
            call 1
            drop
            local.get 0
            i64.const -1
            i64.mul
            local.set 0
        else
        end
        local.get 0
        local.set 4
        i64.const 0
        local.set 1
        loop
            local.get 0
            i64.const 0
            i64.gt_s
            if
                local.get 1
                i64.const 1
                i64.add
                local.set 1
                local.get 0
                i64.const 10
                i64.div_s
                local.set 0
                br 1
            else
            end
        end
        loop
            local.get 1
            i64.const 0
            i64.gt_s
            if
                local.get 1
                i64.const 1
                i64.sub
                local.set 1
                i64.const 1
                local.set 2
                i64.const 0
                local.set 3
                loop
                    local.get 3
                    local.get 1
                    i64.lt_s
                    if
                        local.get 3
                        i64.const 1
                        i64.add
                        local.set 3
                        local.get 2
                        i64.const 10
                        i64.mul
                        local.set 2
                        br 1
                    else
                    end
                end
                local.get 4
                local.get 2
                i64.div_s
                i64.const 10
                i64.rem_s
                i64.const 12
                i64.mul
                i64.const 52
                i64.add
                local.set 0
                i32.const 1
                local.get 0
                i32.wrap_i64
                i32.const 1
                i32.const 0
                call 1
                drop
                br 1
            else
            end
        end
        return
    )
    (func $3 (type 3) (param f64) (result)
        (local i64 i64 i64)
        local.get 0
        f64.const 0.000000
        f64.lt
        if
            i32.const 1
            i32.const 28
            i32.const 1
            i32.const 0
            call 1
            drop
            local.get 0
            f64.const -1.000000
            f64.mul
            local.set 0
        else
        end
        local.get 0
        i64.trunc_f64_s
        call 2
        i32.const 1
        i32.const 40
        i32.const 1
        i32.const 0
        call 1
        drop
        local.get 0
        local.get 0
        i64.trunc_f64_s
        f64.convert_i64_s
        f64.sub
        f64.const 100000000.000000
        f64.mul
        i64.trunc_f64_s
        local.set 2
        local.get 2
        local.set 3
        i64.const 0
        local.set 1
        loop
            local.get 2
            i64.const 0
            i64.gt_s
            if
                local.get 1
                i64.const 1
                i64.add
                local.set 1
                local.get 2
                f64.convert_i64_s
                i64.const 10
                f64.convert_i64_s
                f64.div
                i64.trunc_f64_s
                local.set 2
                br 1
            else
            end
        end
        loop
            local.get 1
            i64.const 8
            i64.lt_s
            if
                local.get 1
                i64.const 1
                i64.add
                local.set 1
                i32.const 1
                i32.const 52
                i32.const 1
                i32.const 0
                call 1
                drop
                br 1
            else
            end
        end
        local.get 3
        call 2
        return
    )
    (func $4 (type 4) (param) (result)
        (local i32 i32)
        i32.const 1
        local.set 0
        i32.const 0
        local.set 1
        local.get 0
        local.get 1
        i32.and
        if
            i32.const 1
            i32.const 172
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        else
            i32.const 1
            i32.const 228
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        end
        local.get 0
        local.get 1
        i32.or
        if
            i32.const 1
            i32.const 264
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        else
            i32.const 1
            i32.const 300
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        end
        local.get 0
        local.get 1
        i32.xor
        if
            i32.const 1
            i32.const 336
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        else
            i32.const 1
            i32.const 372
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        end
        i32.const 0
        local.set 0
        i32.const 1
        local.set 1
        local.get 0
        local.get 1
        i32.and
        i32.eqz
        if
            i32.const 1
            i32.const 412
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        else
            i32.const 1
            i32.const 448
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        end
        local.get 1
        local.get 0
        i32.xor
        if
            i32.const 1
            i32.const 484
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        else
            i32.const 1
            i32.const 520
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        end
        local.get 1
        local.get 0
        i32.eq
        if
            i32.const 1
            i32.const 556
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        else
            i32.const 1
            i32.const 592
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        end
        i32.const 1
        local.set 0
        i32.const 1
        local.set 1
        local.get 0
        local.get 1
        i32.and
        if
            i32.const 1
            i32.const 628
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        else
            i32.const 1
            i32.const 664
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        end
        local.get 0
        local.get 1
        i32.or
        if
            i32.const 1
            i32.const 700
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        else
            i32.const 1
            i32.const 736
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        end
        local.get 0
        local.get 1
        i32.xor
        if
            i32.const 1
            i32.const 772
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 208
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            call 0
            unreachable
        else
            i32.const 1
            i32.const 812
            i32.const 1
            i32.const 0
            call 1
            drop
            i32.const 1
            i32.const 16
            i32.const 1
            i32.const 0
            call 1
            drop
        end
        i32.const 0
        call 0
        return
    )
    (memory (;0;) 100 100)
    (export "memory" (memory 0))
    (export "print_i64" (func 2))
    (export "print_f64" (func 3))
    (export "_start" (func 4))
    (data (;0;) (i32.const 4) "\0c\00\00\00\01\00\00\00")
    (data (;1;) (i32.const 12) "    ")
    (data (;2;) (i32.const 16) "\18\00\00\00\01\00\00\00")
    (data (;3;) (i32.const 24) "\0a   ")
    (data (;4;) (i32.const 28) "\24\00\00\00\01\00\00\00")
    (data (;5;) (i32.const 36) "-   ")
    (data (;6;) (i32.const 40) "\30\00\00\00\01\00\00\00")
    (data (;7;) (i32.const 48) ".   ")
    (data (;8;) (i32.const 52) "\3c\00\00\00\01\00\00\00")
    (data (;9;) (i32.const 60) "0   ")
    (data (;10;) (i32.const 64) "\48\00\00\00\01\00\00\00")
    (data (;11;) (i32.const 72) "1   ")
    (data (;12;) (i32.const 76) "\54\00\00\00\01\00\00\00")
    (data (;13;) (i32.const 84) "2   ")
    (data (;14;) (i32.const 88) "\60\00\00\00\01\00\00\00")
    (data (;15;) (i32.const 96) "3   ")
    (data (;16;) (i32.const 100) "\6c\00\00\00\01\00\00\00")
    (data (;17;) (i32.const 108) "4   ")
    (data (;18;) (i32.const 112) "\78\00\00\00\01\00\00\00")
    (data (;19;) (i32.const 120) "5   ")
    (data (;20;) (i32.const 124) "\84\00\00\00\01\00\00\00")
    (data (;21;) (i32.const 132) "6   ")
    (data (;22;) (i32.const 136) "\90\00\00\00\01\00\00\00")
    (data (;23;) (i32.const 144) "7   ")
    (data (;24;) (i32.const 148) "\9c\00\00\00\01\00\00\00")
    (data (;25;) (i32.const 156) "8   ")
    (data (;26;) (i32.const 160) "\a8\00\00\00\01\00\00\00")
    (data (;27;) (i32.const 168) "9   ")
    (data (;28;) (i32.const 172) "\b4\00\00\00\1a\00\00\00")
    (data (;29;) (i32.const 180) "Line 1 - Condition is true  ")
    (data (;30;) (i32.const 208) "\d8\00\00\00\0b\00\00\00")
    (data (;31;) (i32.const 216) "ERROR STOP\0a ")
    (data (;32;) (i32.const 228) "\ec\00\00\00\1b\00\00\00")
    (data (;33;) (i32.const 236) "Line 1 - Condition is false ")
    (data (;34;) (i32.const 264) "\10\01\00\00\1a\00\00\00")
    (data (;35;) (i32.const 272) "Line 2 - Condition is true  ")
    (data (;36;) (i32.const 300) "\34\01\00\00\1b\00\00\00")
    (data (;37;) (i32.const 308) "Line 2 - Condition is false ")
    (data (;38;) (i32.const 336) "\58\01\00\00\1c\00\00\00")
    (data (;39;) (i32.const 344) "Line xor - Condition is true")
    (data (;40;) (i32.const 372) "\7c\01\00\00\1d\00\00\00")
    (data (;41;) (i32.const 380) "Line xor - Condition is false   ")
    (data (;42;) (i32.const 412) "\a4\01\00\00\1a\00\00\00")
    (data (;43;) (i32.const 420) "Line 3 - Condition is true  ")
    (data (;44;) (i32.const 448) "\c8\01\00\00\1b\00\00\00")
    (data (;45;) (i32.const 456) "Line 3 - Condition is false ")
    (data (;46;) (i32.const 484) "\ec\01\00\00\1a\00\00\00")
    (data (;47;) (i32.const 492) "Line 4 - Condition is true  ")
    (data (;48;) (i32.const 520) "\10\02\00\00\1b\00\00\00")
    (data (;49;) (i32.const 528) "Line 4 - Condition is false ")
    (data (;50;) (i32.const 556) "\34\02\00\00\1a\00\00\00")
    (data (;51;) (i32.const 564) "Line 5 - Condition is true  ")
    (data (;52;) (i32.const 592) "\58\02\00\00\1b\00\00\00")
    (data (;53;) (i32.const 600) "Line 5 - Condition is false ")
    (data (;54;) (i32.const 628) "\7c\02\00\00\1a\00\00\00")
    (data (;55;) (i32.const 636) "Line 6 - Condition is true  ")
    (data (;56;) (i32.const 664) "\a0\02\00\00\1b\00\00\00")
    (data (;57;) (i32.const 672) "Line 6 - Condition is false ")
    (data (;58;) (i32.const 700) "\c4\02\00\00\1a\00\00\00")
    (data (;59;) (i32.const 708) "Line 7 - Condition is true  ")
    (data (;60;) (i32.const 736) "\e8\02\00\00\1b\00\00\00")
    (data (;61;) (i32.const 744) "Line 7 - Condition is false ")
    (data (;62;) (i32.const 772) "\0c\03\00\00\1e\00\00\00")
    (data (;63;) (i32.const 780) "Line 8 xor - Condition is true  ")
    (data (;64;) (i32.const 812) "\34\03\00\00\1f\00\00\00")
    (data (;65;) (i32.const 820) "Line 8 xor - Condition is false ")
)
